# 탐색이 끝나면 삭제후보집합의 칸을 모두 0으로 바꾸고, j고정으로 while 사용해서 끌어내리기
def pushdown(graph):
    for y in range(len(graph[0])):
        for x in range(len(graph)-1,-1,-1):
            if graph[x][y] == 0 : continue
            while True:
                nx = x+1
                if 0<=nx<len(graph):
                    if graph[nx][y] == 0: 
                        graph[x][y], graph[nx][y] = 0, graph[x][y]
                        x+=1
                    else: break
                else : break
    return graph
            
def solution(m, n, board):
    graph = [list(board[i]) for i in range(m)]
    answer = 0
    time=0
    # 순차탐색해서 우측주변 세칸을 확인, 모두 현재칸과 같은 값이면 좌표들 삭제후보집합에 추가 
    # 만약 삭제후보집합에 아무것도 없으면 break, 그렇지않으면 삭제하면서 카운팅
    while True:
        del_set = set()
        for i in range(m-1):
            for j in range(n-1):
                if graph[i][j] == 0: continue
                tmp, right, below, diag = graph[i][j],graph[i][j+1],graph[i+1][j+1],graph[i+1][j]
                if tmp == right and tmp == below and tmp==diag:
                    del_set.update([(i,j),(i,j+1),(i+1,j+1),(i+1,j)])
        if len(del_set) == 0 : break
        for x,y in del_set: 
            graph[x][y]=0
            answer+=1
        graph = pushdown(graph)
    return answer
